# .github/workflows/release.yml
name: Release Client or Server

on:
  push:
    branches:
      - main

jobs:
  check_changes:
    name: Check for file changes
    runs-on: ubuntu-latest
    outputs:
      client-changed: ${{ steps.filter.outputs.client }}
      server-changed: ${{ steps.filter.outputs.server }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Required for semantic-release to analyze the commit history
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'

  release_client:
    name: Create Client Release
    needs: check_changes
    if: needs.check_changes.outputs.client-changed == 'true'
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install root dependencies
        run: npm install
      - name: Install client dependencies
        run: npm install --prefix client
      - name: Release client
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          working_directory: ./client
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  release_server:
    name: Create Server Release
    needs: check_changes
    if: needs.check_changes.outputs.server-changed == 'true'
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install root dependencies
        run: npm install
      - name: Install server dependencies
        run: npm install --prefix server
      - name: Release server
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          working_directory: ./server
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build_push_client:
    name: Build and Push Client Image
    needs: release_client
    if: needs.release_client.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push Client Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./client/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/our-gymnastics-client:${{ needs.release_client.outputs.new_release_version }}

  build_push_server:
    name: Build and Push Server Image
    needs: release_server
    if: needs.release_server.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push Server Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/our-gymnastics-server:${{ needs.release_server.outputs.new_release_version }}
